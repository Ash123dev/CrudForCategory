@model CrudForCategory.Request.CategoryUpadateViewResult;

<h2>Edit Category</h2>

<form asp-action="Edit">
	<input type="hidden" asp-for="Id" />

	<div class="form-group">
		<label asp-for="CategoryName"></label>
		<input asp-for="CategoryName" class="form-control" />
		<span asp-validation-for="CategoryName" class="text-danger"></span>
	</div>

	<h4>Products</h4>
	<div id="products-container">
		@for (int i = 0; i < Model.ProductNames.Count; i++)
		{
			<div class="form-group product-group">
				<input type="hidden" name="ProductNames[@i].Id" value="@Model.ProductNames[i].Id" />
				<label>Product Name</label>
				<input type="text" name="ProductNames[@i].ProductName" value="@Model.ProductNames[i].ProductName" class="form-control" />
				<button type="button" class="btn btn-danger btn-sm remove-product">Remove</button>
			</div>
		}

	</div>

	<button type="button" id="add-product" class="btn btn-secondary">Add Product</button>

	<div class="mt-3">
		<button type="submit" class="btn btn-success">Save</button>
		<a asp-action="Index" class="btn btn-secondary">Cancel</a>
	</div>
</form>

@section Scripts {
	<script>
		let productIndex = @Model.ProductNames.Count;

		document.getElementById('add-product').addEventListener('click', function () {
			var container = document.getElementById('products-container');
			var newInput = document.createElement('div');
			newInput.className = 'form-group product-group';
			newInput.innerHTML = `
				<input type="hidden" name="ProductNames[${productIndex}].Id" value="0" />
				<label>Product Name</label>
				<input type="text" name="ProductNames[${productIndex}].ProductName" class="form-control" />
				<button type="button" class="btn btn-danger btn-sm remove-product">Remove</button>
			`;
			container.appendChild(newInput);
			productIndex++;
		});

		document.getElementById('products-container').addEventListener('click', function (e) {
			if (e.target.classList.contains('remove-product')) {
				e.target.closest('.product-group').remove();
			}
		});

	</script>
}
